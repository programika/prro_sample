/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.programika.rro;

import com.programika.rro.ws.chk.CheckResponse;
import lombok.extern.slf4j.Slf4j;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.MessageDigest;
import java.util.Date;
import java.util.List;

/**
 * @author Igin7
 */
@Slf4j
public class TestPrro extends javax.swing.JFrame {

    String url = "cabinet.sfs.gov.ua:8443";
    //    String url = "127.0.0.1:6501";
    //    Boolean ssl = false;
    Boolean ssl = true;
    String lastPatch = "";
    Sender sender = null;
    Date date;
    Integer type = 1;
    String path = "offline.xml";
    String idOffline = "";
    OfflineId offlineId;
    private MessageDigest digest;

    /**
     * Creates new form TestPrro
     */
    public TestPrro() {
        try {
            digest = MessageDigest.getInstance("SHA-256");
        } catch (Exception e) {
            log.error("init ", e);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pk = new javax.swing.JTextField();
        selectKey = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        read = new javax.swing.JButton();
        pass = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fn = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        hashPrev = new javax.swing.JButton();
        hashPrevVal = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        prepChk = new javax.swing.JButton();
        prepZZvit = new javax.swing.JButton();
        prepOpenShift = new javax.swing.JButton();
        toOffline = new javax.swing.JButton();
        offline = new javax.swing.JCheckBox();
        toOnline = new javax.swing.JButton();
        getOfflineId = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        toSend = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        send = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Key");

        selectKey.setText("...");
        selectKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectKeyActionPerformed(evt);
            }
        });

        jLabel2.setText("pass");

        read.setText("Read");
        read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readActionPerformed(evt);
            }
        });

        pass.setText("tect3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(pk, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectKey, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(read)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(pk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectKey)
                                        .addComponent(jLabel2)
                                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(read)))
        );

        jLabel3.setText("Fn");

        fn.setText("7000000001");
        fn.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(28, 28, 28)
                                .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        hashPrev.setText("HashPrev");
        hashPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashPrevActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(hashPrev)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hashPrevVal)
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(hashPrev)
                                        .addComponent(hashPrevVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        prepChk.setText("Chk");
        prepChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepChkActionPerformed(evt);
            }
        });

        prepZZvit.setText("ZZvit");
        prepZZvit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepZZvitActionPerformed(evt);
            }
        });

        prepOpenShift.setText("Open Shift");
        prepOpenShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepOpenShiftActionPerformed(evt);
            }
        });

        toOffline.setText("toOffline");
        toOffline.setActionCommand("");
        toOffline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toOfflineActionPerformed(evt);
            }
        });

        offline.setText("modeOffline");

        toOnline.setText("toOnline");
        toOnline.setToolTipText("");
        toOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toOnlineActionPerformed(evt);
            }
        });

        getOfflineId.setText("Get Offline Id");
        getOfflineId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOfflineIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(prepOpenShift)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prepChk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prepZZvit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(getOfflineId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(toOffline)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(offline)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toOnline)
                                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(prepChk)
                                        .addComponent(prepZZvit)
                                        .addComponent(prepOpenShift)
                                        .addComponent(toOffline)
                                        .addComponent(offline)
                                        .addComponent(toOnline)
                                        .addComponent(getOfflineId))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        toSend.setColumns(20);
        toSend.setRows(5);
        jScrollPane1.setViewportView(toSend);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(0, 12, Short.MAX_VALUE)
                                .addComponent(send))
        );

        inInfo.setColumns(20);
        inInfo.setRows(5);
        jScrollPane2.setViewportView(inInfo);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(83, 83, 83)
                                                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nlog(String log) {
        this.inInfo.append(log + "\n");
    }

    private void readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readActionPerformed

        try {
            byte[] bytes = Files.readAllBytes(Paths.get(this.pk.getText()));
            sender = new Sender(bytes, this.pass.getText(), "acskidd.gov.ua", url, "crt", ssl);
            nlog("init");
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }


    }//GEN-LAST:event_readActionPerformed

    private void selectKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectKeyActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(false);
        chooser.setPreferredSize(new Dimension(500, 400));
        // chooser.setAcceptAllFileFilterUsed(false);
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("Key-6.dat", "dat"));

//        chooser.addChoosableFileFilter(fileFilter);
        chooser.setAcceptAllFileFilterUsed(true);
        String patch = lastPatch;
        if (patch != null && (new File(patch).exists())) {
            chooser.setCurrentDirectory((new File(patch)));
        }
        int returnVal = chooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            pk.setText(file.getAbsolutePath());
            lastPatch = file.getParent();
        }


    }//GEN-LAST:event_selectKeyActionPerformed

    private void hashPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashPrevActionPerformed

        try {
            String hashPrev = sender.getHashPrev(this.fn.getText());
            nlog("hashPrev " + hashPrev);
            this.hashPrevVal.setText(hashPrev);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_hashPrevActionPerformed

    private void prepOpenShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepOpenShiftActionPerformed
        try {
            prepareOffline();
            date = new Date();
            type = 3;
            String xmlOpenShift = SamplesXml.getXmlOpenShift(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xmlOpenShift);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_prepOpenShiftActionPerformed

    private void prepChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepChkActionPerformed
        try {
            prepareOffline();
            date = new Date();
            type = 1;
            String xmlOpenShift = SamplesXml.getXmlChk(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xmlOpenShift);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }

    }//GEN-LAST:event_prepChkActionPerformed

    private void prepZZvitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepZZvitActionPerformed
        try {
            prepareOffline();
            date = new Date();
            type = 2;
            String xmlOpenShift = SamplesXml.getXmlZZvit(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xmlOpenShift);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_prepZZvitActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed

        try {
            byte[] d = this.toSend.getText().getBytes("windows-1251");
            CheckInternal check = CheckInternal.builder()
                    .data(d)
                    .fn(fn.getText())
                    .number(1)
                    .date(date)
                    .type(type)
                    .build();
//
            if (offline.isSelected()) {
                check.setIdOffline(idOffline);
            }

            CheckResponse answer = sender.sendChk(check);
            nlog(" return " + answer.getStatus() + " " + answer.getId());
            if (answer.getStatusValue() == 1) {
                byte[] hash = digest.digest(d);
                String hashStr = Utils.bytesToHex(hash);
                nlog(" new hash " + hashStr);
                this.hashPrevVal.setText(hashStr);
                if (answer.getDataSign() != null && !answer.getDataSign().isEmpty()) {
                    byte[] in = answer.getDataSign().toByteArray();
                    byte[] bytes = sender.extractDataSign(answer.getDataSign().toByteArray());
                    nlog(" ids  " + new String(bytes, "windows-1251"));
                    Files.write(Paths.get(path), bytes);
                    nlog(" write to  " + Paths.get(path).toAbsolutePath().toString());
                }
                if (offline.isSelected()) {
                    List<String> id1 = offlineId.getId();
                    id1.remove(idOffline);
                    offlineId.setId(id1);
                    sender.saveOfflineIds(path, offlineId);
                    log.debug("saveOfflineIds ");
                }


            }
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_sendActionPerformed


    private void prepareOffline() throws Exception {
        if (offline.isSelected()) {
            offlineId = sender.readOfflineIds(path);
            idOffline = offlineId.getId().get(0);
            nlog("IdOffline " + idOffline);
//                check.setIdOffline(id);
        }
    }

    private void toOfflineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toOfflineActionPerformed

        offline.setSelected(true);
        try {
            prepareOffline();
            date = new Date();
            type = 3;
            String xml = SamplesXml.getXmlToOffline(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xml);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_toOfflineActionPerformed

    private void toOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toOnlineActionPerformed

        offline.setSelected(false);
        try {
            date = new Date();
            type = 3;
            String xml = SamplesXml.getXmlToOnline(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xml);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }

    }//GEN-LAST:event_toOnlineActionPerformed

    private void getOfflineIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOfflineIdActionPerformed
        try {
            date = new Date();
            type = 3;
            String xmlOpenShift = SamplesXml.getXmlOfflineIds(this.fn.getText(), date, this.hashPrevVal.getText(), idOffline);
            this.toSend.setText(xmlOpenShift);
        } catch (Exception e) {
            e.printStackTrace();
            nlog(e.toString());
        }
    }//GEN-LAST:event_getOfflineIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestPrro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestPrro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestPrro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestPrro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestPrro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fn;
    private javax.swing.JButton getOfflineId;
    private javax.swing.JButton hashPrev;
    private javax.swing.JTextField hashPrevVal;
    private javax.swing.JTextArea inInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox offline;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField pk;
    private javax.swing.JButton prepChk;
    private javax.swing.JButton prepOpenShift;
    private javax.swing.JButton prepZZvit;
    private javax.swing.JButton read;
    private javax.swing.JButton selectKey;
    private javax.swing.JButton send;
    private javax.swing.JButton toOffline;
    private javax.swing.JButton toOnline;
    private javax.swing.JTextArea toSend;
    // End of variables declaration//GEN-END:variables
}
